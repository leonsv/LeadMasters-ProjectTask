{
  "info": {
    "name": "Exam Application API",
    "description": "Complete API collection for the Exam Application including authentication, questions, and exam submission endpoints.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', responseJson.token);",
                  "    pm.test('Registration successful', function () {",
                  "        pm.response.to.have.status(201);",
                  "    });",
                  "    pm.test('Token received', function () {",
                  "        pm.expect(responseJson.token).to.be.a('string');",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Question Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/questions/categories",
              "host": ["{{baseUrl}}"],
              "path": ["questions", "categories"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Categories retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('categories');",
                  "    pm.expect(responseJson.categories).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Exam",
      "item": [
        {
          "name": "Submit Exam",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"answers\": [\n        {\n            \"questionId\": \"REPLACE_WITH_ACTUAL_QUESTION_ID\",\n            \"selectedAnswer\": 2\n        },\n        {\n            \"questionId\": \"REPLACE_WITH_ACTUAL_QUESTION_ID\",\n            \"selectedAnswer\": 0\n        }\n    ],\n    \"timeTaken\": 1800\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/exam/submit",
              "host": ["{{baseUrl}}"],
              "path": ["exam", "submit"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Exam submitted successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('result');",
                  "    pm.expect(responseJson.result).to.have.property('score');",
                  "    pm.expect(responseJson.result).to.have.property('grade');",
                  "    pm.expect(responseJson.result).to.have.property('examId');",
                  "});",
                  "",
                  "pm.test('Score is valid', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.result.score).to.be.at.least(0);",
                  "    pm.expect(responseJson.result.score).to.be.at.most(100);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Exam History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/exam/history",
              "host": ["{{baseUrl}}"],
              "path": ["exam", "history"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Exam history retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('exams');",
                  "    pm.expect(responseJson.exams).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Specific Exam Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/exam/REPLACE_WITH_EXAM_ID",
              "host": ["{{baseUrl}}"],
              "path": ["exam", "REPLACE_WITH_EXAM_ID"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Exam details retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('result');",
                  "    pm.expect(responseJson.result).to.have.property('questions');",
                  "    pm.expect(responseJson.result.questions).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Server is healthy', function () {",
              "    pm.response.to.have.status(200);",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('message');",
              "});"
            ]
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// This script runs before every request",
          "console.log('Making request to: ' + pm.request.url);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// This script runs after every request",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});"
        ]
      }
    }
  ]
},
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', responseJson.token);",
                  "    pm.test('Login successful', function () {",
                  "        pm.response.to.have.status(200);",
                  "    });",
                  "    pm.test('Token received', function () {",
                  "        pm.expect(responseJson.token).to.be.a('string');",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User info retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.user).to.have.property('id');",
                  "    pm.expect(responseJson.user).to.have.property('name');",
                  "    pm.expect(responseJson.user).to.have.property('email');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Questions",
      "item": [
        {
          "name": "Get Random Questions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/questions/random?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["questions", "random"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Questions retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.questions).to.be.an('array');",
                  "    pm.expect(responseJson.questions.length).to.be.at.most(10);",
                  "});",
                  "",
                  "pm.test('Questions have required fields', function () {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.questions.length > 0) {",
                  "        const firstQuestion = responseJson.questions[0];",
                  "        pm.expect(firstQuestion).to.have.property('_id');",
                  "        pm.expect(firstQuestion).to.have.property('question');",
                  "        pm.expect(firstQuestion).to.have.property('options');",
                  "        pm.expect(firstQuestion.options).to.be.an('array');",
                  "        pm.expect(firstQuestion.options.length).to.equal(4);",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Question Count",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/questions/count",
              "host": ["{{baseUrl}}"],
              "path": ["questions", "count"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Question count retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('totalQuestions');",
                  "    pm.expect(responseJson.totalQuestions).to.be.a('number');",
                  "});"